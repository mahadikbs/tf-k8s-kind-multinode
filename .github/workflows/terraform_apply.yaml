name: Deploy Kind on EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  EC2_USER: ec2-user

jobs:
  deploy:
    name: Provision EC2 and Install Kind
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUB_KEY }}" > ~/.ssh/id_rsa.pub
          chmod 600 ~/.ssh/id_rsa        
          chmod 600 ~/.ssh/id_rsa.pub

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.organization=my-org
            -Dsonar.projectKey=my-tf-scan-1012434
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}          

      - name: Terraform Init
        run: terraform init 

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply 
        run: |
          terraform apply -auto-approve tfplan
          terraform output -raw public_ip > ip.txt
          cat ip.txt
          echo "EC2_PUBLIC_IP=$(cat ip.txt)" >> $GITHUB_ENV
          echo "$EC2_PUBLIC_IP"
          
      - name: Get EC2 Public IP
        run: |
          ssh-keyscan -H $EC2_PUBLIC_IP >> ~/.ssh/known_hosts

      - name: Install Docker, Kind, and kubectl on EC2
        run: |
          scp -i ~/.ssh/id_rsa -r db $EC2_USER@$EC2_PUBLIC_IP:/home/ec2-user/
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $EC2_USER@$EC2_PUBLIC_IP << 'EOF'
          chmod +x db/*
          cd db
          curl -fsSL https://raw.githubusercontent.com/mahadikbs/required-software/main/custom/kind.sh | bash
          sh monitoring.sh  
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          sh jenkins.sh

          EOF
